version: '3.7'


services:

### TO DO: ADD WIREGUARD SERVER CONTAINER, ADD CONFIG TO EXISTING WG CLIENT VOLUME, GIVE THEM DIFFERENT IPS

  # wireguard-server:
  #   image: linuxserver/wireguard
  #   container_name: wireguard-server
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #     - SERVERPORT=51820 #optional
  #     - PEERS=1 #optional
  #     - PEERDNS=auto #optional
  #     - INTERNAL_SUBNET=10.13.13.0 #optional
  #   volumes:
  #     - ./wireguard/:/config
  #     - /lib/modules:/lib/modules
  #   ports:
  #     - 51820:51820/udp
  #   sysctls:
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   restart: unless-stopped
  #   # networks:
  #   #   backbone:
  #   #     ipv4_address: 172.16.236.33

  wireguard-client:
    image: linuxserver/wireguard
    container_name: wireguard-client
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 172.16.236.44
    volumes:
      - './client/wireguard-config:/config/'
      - '/lib/modules:/lib/modules:ro'
    environment:
      - PUID=1000
      - PGID=1000
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - 4444:4444
      - 7900:7900
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0

  selenium:
    image: selenium/standalone-chrome:4.1.3-20220405
    container_name: selenium
    shm_size: 2g
    restart: always
    network_mode: service:wireguard-client

  client:
    depends_on:
      - wireguard-client
      - selenium
    build: './client'
    container_name: client
    volumes:
      - './client/src:/src/'
    network_mode: service:wireguard-client

  dummy:
    image: 'ubuntu'
    networks:
      - backbone
    depends_on:
      - client
      
  tcpdump_client:
    build: './tcpdump'
    command: not(ip6) -v -w "/data/dump-client-${CAPTURETIME}-$REPNUM.pcap"
    volumes:
      - './data:/data'
    network_mode: "service:client"
    depends_on:
      - dummy
      
  tcpdump_eve:
    build: './tcpdump'
    container_name: eve
    network_mode: "host"
    cap_add:
      - NET_RAW
      - NET_ADMIN
    ports:
      - 51820:51820
    privileged: true
    command: host 172.16.236.44 udp -i any -v -w "/data/dump-adversary-${CAPTURETIME}-$REPNUM.pcap"
    volumes:
      - './data:/data'
    depends_on:
      - dummy

  # tcpdump_vpn:
  #   build: './tcpdump'
  #   command: not(ip6) -v -w "/data/dump-vpn-server-${CAPTURETIME}-$REPNUM.pcap"
  #   volumes:
  #     - './data:/data'
  #   network_mode: "service:wireguard-server"
  #   depends_on:
  #     - dummy

networks:
  backbone:
    driver: bridge
    ipam:
          driver: default
          config:
          - subnet: 172.16.236.0/24
